---
name: Pull Request
on:
  pull_request:
    types: [opened, synchronize, reopened]
  merge_group:
jobs:
  ansible-lint:
    name: Ansible-lint Check
    runs-on: ubuntu-24.04
    env:
      SOURCE_BRANCH: ${{ github.head_ref }}
      TARGET_BRANCH: ${{ github.base_ref }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependent PRs if needed
        uses: depends-on/depends-on-action@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install ansible-lint
        # Install ansible-lint from same branch as GHA
        run: >
          pip install
          "ansible-lint[lock] @
          git+https://github.com/ansible/ansible-lint@v6"

      - name: Install requirements for plugins
        run: pip install -r meta/requirements.txt

      - name: Compare current branch vs main branch
        # Run ansible-lint on this branch then compare vs main branch
        run: |
          ./hack/run_ansible_lint.sh
  sanity:
    name: Sanity Check
    strategy:
      matrix:
        ansible:
          - stable-2.9          # used by DCI on RHEL8
          - stable-2.18         # latest stable version
      fail-fast: false
    runs-on: ${{ matrix.ansible == 'stable-2.18' && 'ubi8-latest' || 'ubuntu-latest' }}
    steps:
      - name: Install Node.js and podman-docker on RHEL runner
        if: contains(job.runs-on, 'ubi8-latest')
        run: |
          # Prefer using podman over docker
          sudo dnf install -y nodejs podman-docker
      - name: Install Node.js and podman-docker on Ubuntu runner
        if: contains(job.runs-on, 'ubuntu-latest')
        run: |
          sudo apt-get update
          # Prefer using podman over docker
          sudo apt-get install -y nodejs podman-docker
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: ${{ matrix.ansible }}/ansible_collections/redhatci/ocp

      - name: Install dependent PRs if needed
        uses: depends-on/depends-on-action@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: ${{ matrix.ansible }}/ansible_collections/redhatci/ocp

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install ansible-base ${{ matrix.ansible }}
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check

      # Fail when new errors appear
      - name: Run ansible-test sanity/units/integration
        run: |
          set -x
          ./hack/run_ansible_test.sh sanity units integration
        working-directory: ${{ matrix.ansible }}/ansible_collections/redhatci/ocp

  check-all-dependencies-are-merged:
    name: "Check all dependencies are merged"
    runs-on: ubuntu-24.04
    steps:

      - name: Check all dependent Pull Requests are merged
        uses: depends-on/depends-on-action@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          check-unmerged-pr: true

  check-docs:
    name: Check version, documentation and README
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependent PRs if needed
        uses: depends-on/depends-on-action@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check roles are documented in main README
        run: |
          ./hack/check_doc.sh

      - name: Check versions are consistent
        run: |
          echo "# Inconsistent versions" > "${GITHUB_STEP_SUMMARY}"
          ./hack/check_version.sh

...
